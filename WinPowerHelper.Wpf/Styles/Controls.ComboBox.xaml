<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" 
                            Background="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=BorderBrush}" 
                            SnapsToDevicePixels="true"
                            Padding="{TemplateBinding Padding}">
                        <Border x:Name="splitBorder" 
                                BorderThickness="1" 
                                BorderBrush="Transparent" 
                                HorizontalAlignment="Right" 
                                Margin="0" 
                                SnapsToDevicePixels="true" 
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" 
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
                                  Fill="{DynamicResource Brushes.Gray1}" 
                                  HorizontalAlignment="Center" 
                                  Margin="0" 
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                                           Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" 
                                           Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" 
                                           Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" 
                                           Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="templateRoot" 
                                    Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Background}"/>
                            <Setter Property="BorderBrush" 
                                    TargetName="templateRoot" 
                                    Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=BorderBrush}"/>
                            <Setter Property="Background" 
                                    TargetName="splitBorder" 
                                    Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Background}"/>
                            <Setter Property="BorderBrush" 
                                    TargetName="splitBorder" 
                                    Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=BorderBrush}"/>
                        </MultiDataTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" 
                                    TargetName="arrow" 
                                    Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                        </Trigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" 
                                           Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                                           Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="templateRoot" 
                                    Value="{DynamicResource Brushes.Gray9}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" 
                                           Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                                           Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="templateRoot" 
                                    Value="{DynamicResource Brushes.Gray8}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" 
                                           Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                                           Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="templateRoot" 
                                    Value="{DynamicResource Brushes.Gray8}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" 
                                    TargetName="templateRoot" 
                                    Value="{DynamicResource Brushes.Gray8}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" 
                                    TargetName="arrow" 
                                    Value="{DynamicResource Brushes.Controls.Disabled}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" 
                                           Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                                           Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" 
                                    TargetName="arrow" 
                                    Value="{DynamicResource Brushes.Controls.Disabled}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" 
                                           Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                                           Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" 
                                    TargetName="arrow" 
                                    Value="{DynamicResource Brushes.Controls.Disabled}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brushes.Black}"/>
        <Setter Property="Background" Value="{DynamicResource Brushes.White}"/>
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="6 8"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" 
                          SnapsToDevicePixels="true">    
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" 
                               AllowsTransparency="true" 
                               Grid.ColumnSpan="2" 
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                               Margin="1" 
                               Placement="Bottom" 
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="dropDownBorder" 
                                        Background="{DynamicResource Brushes.White}" 
                                        BorderThickness="1" 
                                        BorderBrush="{DynamicResource Brushes.Black}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" 
                                              RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" 
                                                    HorizontalAlignment="Left" 
                                                    Height="0" 
                                                    VerticalAlignment="Top" 
                                                    Width="0">
                                                <Rectangle x:Name="opaqueRect" 
                                                           Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                            KeyboardNavigation.DirectionalNavigation="Contained" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" 
                                      Style="{StaticResource ComboBoxToggleButton}"
                                      Background="{TemplateBinding Background}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      Grid.ColumnSpan="2" 
                                      Padding="{TemplateBinding Padding}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>  
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItem.Accent" TargetType="ComboBoxItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Padding" Value="{Binding Path=Padding, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
        <Setter Property="Background" 
                                    Value="{DynamicResource Brushes.White}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}">
                        <Grid  >
                            <ContentControl Margin="{TemplateBinding Padding}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Content="{TemplateBinding Content}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" 
                                                        Value="{DynamicResource Brushes.Accent3}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" 
                                                        Value="{DynamicResource Brushes.Accent}"/>
                            <Setter Property="Foreground"
                                                        Value="{DynamicResource Brushes.White}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>